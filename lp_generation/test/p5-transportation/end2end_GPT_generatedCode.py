'''
This is file is completely generated by GPT4o

Input--
problem_summary
数据指引
数据到字母的mapping

Output--
如下
'''
from pyscipopt import Model, quicksum
import json

# Load data
with open("data.json", "r") as file:
    data = json.load(file)

WarehouseCount = data["WarehouseCount"]
OutletCount = data["OutletCount"]
AvailableAppleCartons = data["AvailableAppleCartons"]
RequiredAppleCartons = data["RequiredAppleCartons"]
TransportationCost = data["TransportationCost"]

# Create model
model = Model("AppleDistribution")

# Define variables
x = {}
for i in range(WarehouseCount):
    for j in range(OutletCount):
        x[i, j] = model.addVar(vtype="C", name=f"x({i},{j})")

# Define objective function
model.setObjective(quicksum(TransportationCost[i][j] * x[i, j] for i in range(WarehouseCount) for j in range(OutletCount)), "minimize")

# Add supply constraints
for i in range(WarehouseCount):
    model.addCons(quicksum(x[i, j] for j in range(OutletCount)) <= AvailableAppleCartons[i], name=f"Supply({i})")

# Add demand constraints
for j in range(OutletCount):
    model.addCons(quicksum(x[i, j] for i in range(WarehouseCount)) == RequiredAppleCartons[j], name=f"Demand({j})")

# Add non-negativity constraints (this is implicitly handled by the model.addVar with vtype="C")

# Optimize model
model.writeProblem('transportation-test.lp')