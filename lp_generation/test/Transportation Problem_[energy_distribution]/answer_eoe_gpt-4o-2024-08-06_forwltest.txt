import gurobipy as gp
from gurobipy import GRB
import json

# Load data from JSON file
with open('data.json', 'r') as f:
    data = json.load(f)

supply = data['supply']
demand = data['demand']
cost = data['cost']

num_plants = len(supply)
num_regions = len(demand)

# Create a new model
model = gp.Model("energy_distribution")

# Create variables
transport = model.addVars(num_plants, num_regions, name="transport", lb=0)

# Set objective
model.setObjective(gp.quicksum(cost[i][j] * transport[i, j] for i in range(num_plants) for j in range(num_regions)), GRB.MINIMIZE)

# Add supply constraints
for i in range(num_plants):
    model.addConstr(gp.quicksum(transport[i, j] for j in range(num_regions)) <= supply[i], name=f"supply_{i}")

# Add demand constraints
for j in range(num_regions):
    model.addConstr(gp.quicksum(transport[i, j] for i in range(num_plants)) == demand[j], name=f"demand_{j}")

# Optimize model
model.optimize()

# Print the solution
if model.status == GRB.OPTIMAL:
    print("Optimal solution found:")
    for i in range(num_plants):
        for j in range(num_regions):
            print(f"Transport from plant {i} to region {j}: {transport[i, j].x}")
    print(f"Total transmission cost: {model.objVal}")
else:
    print("No optimal solution found.")
```