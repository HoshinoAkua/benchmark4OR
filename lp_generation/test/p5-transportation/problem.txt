A transportation problem has arisen in relation to the efficient distribution of apple cartons from numerous warehouses to several supermarket chains. Supermarket chains need to ensure the distribution of apple cartons from the warehouses to their various outlets in such a manner that meets the required demand of each outlet.

Each of these warehouses has a specific maximum capacity at which they can supply these apple cartons. This capacity must not be exceeded at any time. The costs of transporting these apple cartons from the warehouses to the outlets are variable and need to be taken into account. \n\nThe ultimate aim is to find the most cost-effective way of distributing the apple cartons from the warehouses to the outlets. This distribution must satisfy the outlets' needs without surpassing the available capacity of the warehouses. 

The apple cartons need to be transported from each warehouse to each supermarket outlet in certain quantities. These quantities will be determined by multiple constraints. The first one is that a warehouse should not distribute more apple cartons than its supply capacity. The second constraint is that each outlet must have its demand met in full by receiving the precise quantity of apple cartons. 

A third constraint is that the quantity of apple cartons being dispatched from a warehouse to the outlet should never be a negative figure. In summary, the challenge is to transport apple cartons in such a way that total cost is minimized, specific demands of the supermarkets are met, and the ability of each warehouse to supply is respected.

Specifically we will only consider the following parameter.

{
    "WarehouseCount": "Number of warehouses in supermarket chain",
    "OutletCount": "Number of supermarket outlets in chain",
    "AvailableAppleCartons": "Quantity of apple cartons in each warehouse",
    "RequiredAppleCartons": "Quantity of apple cartons required at each outlet",
    "TransportationCost": "Cost of transporting apple cartons from warehouses to outlets"
}

These parameter will be provided in a separated "data.json" as the above dictionary. 