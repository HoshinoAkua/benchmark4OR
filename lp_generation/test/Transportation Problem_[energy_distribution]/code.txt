import json
from gurobipy import Model, GRB

# Transportation Problem
# Problem type: LP
# Domain: energy_distribution

# Read data
with open('data.json', 'r') as f:
    data = json.load(f)

### Read parameters from data
supply = data['supply']  # the generation capacities of each power plant
demand = data['demand']  # the energy demands of each region
cost = data['cost']  # the transmission costs from each power plant to each region

### Get hyperparameters from parameters
num_plants = len(supply)  # number of power plants
num_regions = len(demand)  # number of regions

# Create a new model
model = Model("Transportation Problem")

### Add variables
# The amount of electricity transported from each power plant to each region
x = model.addVars(num_plants, num_regions, vtype=GRB.CONTINUOUS, name="x")

### Set objective
# Minimize the total transmission cost
model.setObjective(sum(cost[i][j] * x[i, j] for i in range(num_plants) for j in range(num_regions)), GRB.MINIMIZE)

### Add constraints
# The total amount of electricity supplied by each power plant cannot exceed its capacity
for i in range(num_plants):
    model.addConstr(sum(x[i, j] for j in range(num_regions)) <= supply[i], name=f"supply_{i}")

# The total amount of electricity received by each region must meet its demand
for j in range(num_regions):
    model.addConstr(sum(x[i, j] for i in range(num_plants)) >= demand[j], name=f"demand_{j}")

# Save the model as a '.lp' file.
model.write('model.lp')